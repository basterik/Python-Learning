Третий блок Занятия 15-21.

Занятие 15: Работа с моделями в Django

Результат занятия: доработка моделей, оптимизация и отладка
•Как сделать сложный запрос проще? `select_related()`, `values()`
•Следим за запросами с помощью `django-debug-toolbar`
•Создание и валидация `ModelForm`
•Работа в `FileField` и `ImageField`, сохранение пользовательских медиа файлов
•Наследование моделей, абстрактные модели и миксины
•Менеджеры
•`raw queries`: плюсы и минусы
•Доработка своего приложения 

Занятие 16: Администрирование Django приложения

Результат занятия: написанная админская часть приложения
•Как устроена админская панель?
•Как администрировать приложение?
•Авторизация пользователей, группы и права доступа
•Создание собственных `admin-view`
•Знакомство с `django-admin-tools`
•`Django Management Commands`, создание своих комманд
•Как правильно вести логи?

Занятие 17: Тестирование Python приложения

Результат занятия: законченное приложение блог с базой данных, дизайном и с тестами.
•Что такое тест, и зачем тестировать приложение?
•Какие бывают тесты? В чем разница между unit-тестыми и интеграционными тестами?
•Модуль `unittest` в `Python`
•Что такое "изоляция"? Знакомство с модулем `mock`
•Тесты для нескольких версий `Python` с `tox`
•Интеграционные тесты с `selenium`
•Сколько кода покрыто тестами? Введение в `coverage`
•Написание тестов к своему проекту, достижение покрытия в 70-80%

Занятие 18: Тестирование Javascript приложения

Результат занятия: напиание тестов для своего приложения
•Почему у `js` так много фреймфорков для тестирования?
•Тестировани при помощи `mocha`, `Chai` и `Sinon`
•Изоляция: моки, шпионы и удары в спину
•Тестирование картинками, или как работает `gemini`
•Как запустить все тесты сразу? Знакомство с `polytester`
•Автотесты локально на примере `Grunt` и удаленно на примере Travis CI

Занятие 19: Введение в TDD и BDD

Результат занятия: написание модуля в TDD стиле, создание BDD тестов
•Что такое `Test Driven Development`?
•Плюсы и минусы такого похода
•Тестирование `Django` приложения при помощи `LiveServerTestCase` и `StaticLiveServerTestCase`
•Почему TDD и BDD часто сравнивают?
•Как описать поведение приложения? Введение в псевдо-язык `gherkin`
•Сравнение BDD фреймворков для `Python`
•Запуск BDD тестов
•Когда такие подходы нужны, применимы и потивопоказаны? И когда писать какие тесты? 

Занятие 20: Celery

Результат занятия: написание асинхронных задач для своего проекта
•Настройка и установка `Celery with Redis`
•Знакомство с асинхронными задачами
•Периодичные задания с `Celery Beat`
•Конроль выполнения задач с `Celerycam`
•Мониторинг `Redis`
•Как дебажить `Celery`?
•Написание асинхронных задач

Занятие 21: Полезности для Django разработчика

Результат занятия:
•Краткое знакомство с популярными библиотеками
•`python-social-auth`
•`django-rest-framework`
•`django-cms`
•`Elasticsearch`
•`Sentry` и `Raven` (+ `raven.js`)
